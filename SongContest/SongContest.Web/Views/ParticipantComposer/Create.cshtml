@model CreateComposerViewModel
@{
    ViewData["Title"] = "Komponisten bearbeiten";
}

<h2>@ViewData["Title"]</h2>

<h3>Land: @Model.CountryName</h3>
<h3>Song: @Model.SongTitle</h3>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="NewComposerName" class="control-label"></label>
        <input asp-for="NewComposerName" class="form-control" />
        <span asp-validation-for="NewComposerName" class="text-danger"></span>
    </div>
    <input asp-for="ParticipantId" type="hidden" />
    <div class="form-group">
        <input type="submit" value="Hinzufügen" class="btn btn-primary" />
    </div>
</form>

<table class="table table-striped">
    <tr><th>Komponist</th></tr>
    @foreach (var composer in Model.ComposerNames)
    {
        <tr><td>@composer</td></tr>
    }
</table>

<div>
    <a asp-controller="Home" asp-action="Index" class="btn btn-primary">Zurück zur Übersicht</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
